==========================================
Section4: Making Real Projects with Docker
==========================================

Lecture 36: Project Outline
===========================

Lecture 37: Node Server Setup
=============================
mkdir simpleweb
cd simpleweb

(a) create a file named package.json with the following content:
{
  "dependencies": {
    "express": "*"
  },
  "scripts": {
    "start": "node index.js"
  }
}

(b) crate a file named index.js with the following content:
const express = require('express');
const app = express();
 
app.get('/', (req, res) => {
  res.send('How are you doing');
});
 
app.listen(8080, () => {
  console.log('Listening on port 8080');
});

Lecture 38: Server Code
=======================

Lecture 39: A Few Planned Errors
================================

create a file named Dockerfile
---
# Specify a base image
FROM aline

# Install some dependencies
RUN npm install

# Default command
CMD ["npm", "start"]
---

docker build .

We should see the following: 
/bin/sh: npm: not found
The command '/bin/sh -c npm install' returned a non-zero code: 127

Lecture 40: Base Image Issues
=============================

Update Dockerfile file

---
# Specify a base image
FROM node:alpine

# Install some dependencies
RUN npm install

# Default command
CMD ["npm", "start"]
---

Lecture 41: A Few Missing Files
===============================

docker build .

npm WARN saveError ENOENT: no such file or directory, open '/package.json'
npm notice created a lockfile as package-lock.json. You should commit this file.
npm WARN enoent ENOENT: no such file or directory, open '/package.json'
npm WARN !invalid#2 No description
npm WARN !invalid#2 No repository field.
npm WARN !invalid#2 No README data
npm WARN !invalid#2 No license field.

Lecture 42: Copying Build Files
===============================

Update Dockerfile file

---
# Specify a base image
FROM node:alpine

# Install some dependencies
--> COPY ./ ./
RUN npm install

# Default command
CMD ["npm", "start"]
---

docker build . 

The following is fine. No issue:

npm notice created a lockfile as package-lock.json. You should commit this file.
npm WARN !invalid#2 No description
npm WARN !invalid#2 No repository field.
npm WARN !invalid#2 No license field.

Successfully built <image-id>

Lecture 43: Container Port Mapping
==================================

docker build -t marshad1/simpleweb . -- # Tagging an image
docker image ls -a
docker run marshad1/simpleweb -- # Go to your browser and typle localhost:8080, nothing prints out!
ctrl-c
docker run -p 8080:8080 marshad1/simpleweb -- # Port mapping
docker run -it marshad1/simpleweb sh

Lecture 44: Specifying Working Directory
========================================

Update Dockerfile file

---
# Specify a base image
FROM node:alpine

WORKDIR /usr/app

# Install some dependencies
COPY ./ ./
RUN npm install

# Default command
CMD ["npm", "start"]
---

docker run -p 8080:8080 marshad1/simpleweb

Run another process inside a docker container
docker exec -it <CONTAINER_ID> sh